-> (C) {"command": "initialize", "arguments": {"adapterID": "netcoredbg-debug", "clientID": "vimspector", "clientName": "vimspector", "linesStartAt1": true, "columnsStartAt1": true, "locale": "en_GB", "pathFormat": "path", "supportsVariableType": true, "supportsVariablePaging": false, "supportsRunInTerminalRequest": true, "supportsMemoryReferences": true}, "seq": 0, "type": "request"}
<- (E) {"seq":1,"body":{"capabilities":{"supportTerminateDebuggee":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsExceptionInfoRequest":true,"supportsFunctionBreakpoints":true,"supportsSetVariable":true}},"event":"capabilities","type":"event"}
<- (E) {"seq":2,"body":{},"event":"initialized","type":"event"}
<- (R) {"seq":3,"body":{"supportTerminateDebuggee":true,"supportsConditionalBreakpoints":true,"supportsConfigurationDoneRequest":true,"supportsExceptionInfoRequest":true,"supportsFunctionBreakpoints":true,"supportsSetVariable":true},"command":"initialize","request_seq":0,"success":true,"type":"response"}
-> (C) {"command": "setBreakpoints", "arguments": {"source": {"name": "Program.cs", "path": "/home/jan/repos/cs-vimspector/main/Program.cs"}, "breakpoints": [{"line": 20}, {"line": 15}], "sourceModified": false}, "seq": 1, "type": "request"}
<- (R) {"seq":4,"body":{"breakpoints":[{"id":1,"line":20,"message":"The breakpoint is pending and will be resolved when debugging starts.","verified":false},{"id":2,"line":15,"message":"The breakpoint is pending and will be resolved when debugging starts.","verified":false}]},"command":"setBreakpoints","request_seq":1,"success":true,"type":"response"}
-> (C) {"command": "setExceptionBreakpoints", "arguments": {"filters": []}, "seq": 2, "type": "request"}
<- (R) {"seq":5,"body":{"supportsExceptionOptions":false},"command":"setExceptionBreakpoints","request_seq":2,"success":true,"type":"response"}
-> (C) {"command": "attach", "arguments": {"cwd": "/home/jan/repos/cs-vimspector/main", "request": "attach", "processId": "", "name": "test"}, "seq": 3, "type": "request"}
